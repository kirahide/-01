＜HTMLのソースコード＞

<!DOCTYPE html>
<html lang="ja">
	<head>
	 <meta charset="utf-8">
	 <title>〇×ゲーム</title>
	 <link rel="stylesheet" href="style.css">
	</head>
	<body>
 	 <div>
	  <p id='display-count'>oの番</p>
	 </div>
	 <div>
   	  <input type='button' class='block' id="b1"></input>
    	  <input type='button' class='block' id="b2"></input>
   	  <input type='button' class='block' id="b3"></input>
  	 </div>
	 <div>
   	  <input type='button' class='block' id="b4"></input>
    	  <input type='button' class='block' id="b5"></input>
   	  <input type='button' class='block' id="b6"></input>
  	 </div>
	 <div>
   	  <input type='button' class='block' id="b7"></input>
    	  <input type='button' class='block' id="b8"></input>
   	  <input type='button' class='block' id="b9"></input>
  	 </div>
	 <div>
   	  <p id='display-result'></p>
   	  <input type='button' id='reset' value='もう一度遊ぶ'></input>
  	 </div>
	 <script value='text/javascript' src='javascript.js'></script>
 	</body>
</html>

＜CSSのソースコード＞

body{
	text-align:center;
	font-size:30px;
}
input{
	font-size:30px;
}
.block{
	width:40px;
	height:40px;
	vertical-align:middle;
	margin-bottom:10px;
}
input[value="o"]{
	color:red;
}
input[value="x"]{
	color:blue;
}

＜JSのソースコード＞

//先攻のマーク
const FIRST_MARK = 'o';

//後攻のマーク
const NEXT_MARK = 'x';

//ターン数
let count = 1;

//マス目のIDリスト
const IDS = [
	['b1','b2','b3'],
	['b4','b5','b6'],
	['b7','b8','b9']
];

//ゲーム実行中のフラグ
let isRun = true;

//IDからオブジェクトを取得する
function $(id){
	return document.getElementById(id);
}

//先攻のターンか判定する
function isFirstMove(){
	let isFirst = count % 2;
	
	return isFirst == 1;
}

//ターン表示を切り替える
function changeDisplayCount(){
	if(isFirstMove()){
		//先攻のターンの場合
		$('display-count').innerHTML = FIRST_MARK + 'の番'
	}
	else{
		//後攻のターンの場合
		$('display-count').innerHTML = NEXT_MARK + 'の番'
	}
}

//ゲーム終了を判定する
function judgeEnd(){

	let isEnd = false;

	//横３マスが揃う
	for(let row=0;row<3;row++){
		//勝敗を判定する
		isEnd = isWin(IDS[row][0],IDS[row][1],IDS[row][2]);
		if(isEnd){
			displayResult($(IDS[row][0]).value + 'の勝ち！');
			return true;
		}
	}
	//縦３マスが揃う
	for(let col=0;col<3;col++){
		//勝敗を判定する
		isEnd = isWin(IDS[0][col],IDS[1][col],IDS[2][col]);
		if(isEnd){
			displayResult($(IDS[0][col]).value + 'の勝ち！');
			return true;
		}
	}	
	//斜め(右下がり)３マスが揃う
	isEnd = isWin(IDS[0][0],IDS[1][1],IDS[2][2]);
	if(isEnd){
		displayResult($(IDS[0][0]).value + 'の勝ち！');
		return true;
	}
	//斜め(左下がり)３マスが揃う	
	isEnd = isWin(IDS[0][2],IDS[1][1],IDS[2][0]);
	if(isEnd){
		displayResult($(IDS[0][2]).value + 'の勝ち！');
		return true;
	}
	
	//引き分けの場合
	if(9<=count){
		displayResult('引き分け！');
		return true;
	}
	
	//ゲーム続行の場合はfalseを返す
	return false;
}

//勝敗を判定する
function isWin(firstId,secondId,thirdId){

	//1つ目のマスが空の場合は終了する
	if($(firstId).value==''){
		return false;
	}
	//2つ目のマスが空の場合は終了する
	if($(secondId).value==''){
		return false;
	}
	//3つ目のマスが空の場合は終了する
	if($(thirdId).value==''){
		return false;
	}

	//3つのマスが同じマークの場合は勝利
	if(
		( $(firstId).value == $(secondId).value )
		&& ( $(secondId).value == $(thirdId).value )
	){
		return true;
	}

	//3つのマスが同じマーク出ない場合は勝利ではない
	return false;
}

//勝利の結果を表示する
function displayResult(message){
	$('display-result').innerHTML = message;
	isRun = false;

	//もう一度遊ぶボタンを表示
	$('reset').style.display = '';

}


//マスを選択するアクション
function clickAction(event){
	//ゲーム実行中でなければ終了
	if(!isRun){
		return;
	}
	
	
	//イベントからクリックされたマス目のIDを取得する	
	let id = event.target.id;
	
	//IDからオブジェクトを取得する
	let object = $(id);

	//既にマスが埋まっている場合はスキップ
	if(object.value !=''){
		return;
	}
	
	//マス目にマークを設定する
	if(isFirstMove()){
		object.value = FIRST_MARK;
	}
	else{
		object.value = NEXT_MARK;
	}
	
	//ゲーム終了を判定する
	if(judgeEnd()){
		return;
	}
	
	//ターンを＋１にする
	count = count + 1;
	
	//ターン表示を切り替える
	changeDisplayCount();

}

//もう一度遊ぶボタンが押された時の処理
function resetAction(){
	//ターンを１に戻す
	count = 1;
	changeDisplayCount();

	//マス目を空にする
	for(let row=0;row<3;row++){
		for(let col=0;col<3;col++){
			$(IDS[row][col]).value = '';
		}
	}

	//結果の表示をリセットする
	displayResult('');

	//ゲームを実行中に戻す
	isRun = true;

	//もう一度遊ぶボタンを非表示
	$('reset').style.display = 'none';

}

//画面を読み込んだ時の処理
function onloadAction(){
	//マス目にイベントを設定する
	for(let row=0;row<3;row++){
		for(let col=0;col<3;col++){
			$(IDS[row][col]).onclick = clickAction;
		}
	}

	//もう一度遊ぶボタンにイベントを設定する
	$('reset').onclick = resetAction;

	//リセットアクションを実行
	resetAction();

}

//画面読み込み時のイベント時の設定
window.onload = onloadAction;
